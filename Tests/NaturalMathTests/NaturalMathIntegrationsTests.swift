import XCTest
@testable import NaturalMath

final class NaturalMathIntegrationsTests: XCTestCase {
    func testValidInput() {
        XCTAssertEqual(try! NaturalMath("1").result.get(), 1)
        XCTAssertEqual(try! NaturalMath("1+2").result.get(), 3)
        XCTAssertEqual(try! NaturalMath("1+2-3").result.get(), 0)
        XCTAssertEqual(try! NaturalMath("1+2-3*4").result.get(), -9)
        XCTAssertEqual(try! NaturalMath("1+2-3*4/5").result.get(), 0.6)
        XCTAssertEqual(try! NaturalMath("1+2-3*4/5+2^6").result.get(), 64.6)
        XCTAssertEqual(try! NaturalMath("6/2*(1+2)").result.get(), 9)
        XCTAssertEqual(try! NaturalMath("-2^2").result.get(), -4)
        XCTAssertEqual(try! NaturalMath("-(2^2)").result.get(), -4)
        XCTAssertEqual(try! NaturalMath("-3*2").result.get(), -6)
        XCTAssertEqual(try! NaturalMath("3*-2").result.get(), -6)
        XCTAssertEqual(try! NaturalMath("-3*-2").result.get(), 6)
        XCTAssertEqual(try! NaturalMath("-3-2").result.get(), -5)
        XCTAssertEqual(try! NaturalMath("(3)(2)").result.get(), 6)
        XCTAssertEqual(try! NaturalMath("-(3)-(2)").result.get(), -5)
        XCTAssertEqual(try! NaturalMath("-(3)*-(2)").result.get(), 6)
        XCTAssertEqual(try! NaturalMath("3*-(2)").result.get(), -6)
        XCTAssertEqual(try! NaturalMath("(1+2)(3-4)").result.get(), -3)
        XCTAssertEqual(try! NaturalMath("(1+2)*(3-4)").result.get(), -3)
        XCTAssertEqual(try! NaturalMath("(((3)))-(23(232)(2+2))").result.get(), -21341)
        XCTAssertEqual(try! NaturalMath("(1)-(2)(5)/-3(3)").result.get(), 11)
        XCTAssertEqual(try! NaturalMath("(1)-(2)(5)/-3(3)").result.get(), 11)
        XCTAssertEqual(try! NaturalMath("(1)-(2)(5)/-3(3)").result.get(), 11)
        XCTAssertEqual(try! NaturalMath("3(6+7)").result.get(), 39)
        XCTAssertEqual(try! NaturalMath("(1+2)(6+7)").result.get(), 39)
        XCTAssertEqual(try! NaturalMath("-(-3*-2)").result.get(), -6)
        XCTAssertEqual(try! NaturalMath("√49").result.get(), 7)
        XCTAssertEqual(try! NaturalMath("√(49)+1").result.get(), 8)
        XCTAssertEqual(try! NaturalMath("(1+√49)+1").result.get(), 9)
        XCTAssertEqual(try! NaturalMath("(1+√(49))+1").result.get(), 9)
        XCTAssertEqual(try! NaturalMath("√((4+5))+1").result.get(), 4)
        XCTAssertEqual(try! NaturalMath("√((4))+1").result.get(), 3)
        XCTAssertEqual(try! NaturalMath("√(4)+1").result.get(), 3)
        XCTAssertEqual(try! NaturalMath("√4+1").result.get(), 3)
        XCTAssertEqual(try! NaturalMath("√4^2").result.get(), 4)
        XCTAssertEqual(try! NaturalMath("√(16+9)").result.get(), 5)
        XCTAssertEqual(try! NaturalMath("√16+10").result.get(), 14)
        XCTAssertEqual(try! NaturalMath("4√9+10").result.get(), 22)
        XCTAssertEqual(try! NaturalMath("4*√9+10").result.get(), 22)
        XCTAssertEqual(try! NaturalMath("3/√9-2").result.get(), -1)
        XCTAssertEqual(try! NaturalMath("√(√16)√(√81)").result.get(), 6)
        XCTAssertEqual(try! NaturalMath("√√16").result.get(), 2)
        XCTAssertEqual(try! NaturalMath("√√16√√81").result.get(), 6)
        XCTAssertEqual(try! NaturalMath("√√16(-1)√√81").result.get(), -6)
        XCTAssertEqual(try! NaturalMath("sqrt9").result.get(), 3)
        XCTAssertEqual(try! NaturalMath("sqrtsqrtsqrt256").result.get(), 2)
        XCTAssertEqual(try! NaturalMath("sqrt(3sqrt9)").result.get(), 3)
        XCTAssertEqual(try! NaturalMath("sqrt((9))+sqrt(((4)))").result.get(), 5)
        XCTAssertEqual(try! NaturalMath("3sqrt4").result.get(), 6)
        XCTAssertEqual(try! NaturalMath("(1+2)sqrt4").result.get(), 6)
        XCTAssertEqual(try! NaturalMath("2^3^2").result.get(), 512)
        XCTAssertEqual(try! NaturalMath("lb4^2").result.get(), 4)
        XCTAssertEqual(try! NaturalMath("lb4^log100").result.get(), 4)
        XCTAssertEqual(try! NaturalMath("2^log100").result.get(), 4)
        XCTAssertEqual(try! NaturalMath("-2^-3^-2").result.get(), -0.925874712)
        XCTAssertEqual(try! NaturalMath("(2^3)^2").result.get(), 64)
        XCTAssertEqual(try! NaturalMath("(1+3)^√4+1").result.get(), 17)
        XCTAssertEqual(try! NaturalMath("(1+3)^√(9-5)").result.get(), 16)
        XCTAssertEqual(try! NaturalMath("2**2**2").result.get(), 16)
        XCTAssertEqual(try! NaturalMath("log 100").result.get(), 2)
        XCTAssertEqual(try! NaturalMath("lb 4").result.get(), 2)
        XCTAssertEqual(try! NaturalMath("ln 7.38905609893").result.get(), 2)
        XCTAssertEqual(try! NaturalMath("㏒ 10").result.get(), 1)
        XCTAssertEqual(try! NaturalMath("l 8").result.get(), 3)
        XCTAssertEqual(try! NaturalMath("㏑ 2.71828182846").result.get(), 1)
        XCTAssertEqual(try! NaturalMath("2log 100").result.get(), 4)
        XCTAssertEqual(try! NaturalMath("2lb 4").result.get(), 4)
        XCTAssertEqual(try! NaturalMath("2ln 7.38905609893").result.get(), 4)
        XCTAssertEqual(try! NaturalMath("2^lb(3+1)").result.get(), 4)
        XCTAssertEqual(try! NaturalMath("2^lblb16+1").result.get(), 5)
        XCTAssertEqual(try! NaturalMath("log 10^2").result.get(), 2)
        XCTAssertEqual(try! NaturalMath("log (10^2)").result.get(), 2)
        XCTAssertEqual(try! NaturalMath("lb2^2").result.get(), 2)
        XCTAssertEqual(try! NaturalMath("lb(2^2)").result.get(), 2)
        XCTAssertEqual(try! NaturalMath("10/log100^-1").result.get(), -5)
        XCTAssertEqual(try! NaturalMath("log100ln7.38905609893lb4").result.get(), 8)
        XCTAssertEqual(try! NaturalMath("1,000+5").result.get(), 1005)
        XCTAssertEqual(try! NaturalMath("1+2﹢3＋4").result.get(), 10)
        XCTAssertEqual(try! NaturalMath("1-2−3－4–5—6").result.get(), -19)
        XCTAssertEqual(try! NaturalMath("1*2×3⋅4x5").result.get(), 120)
        XCTAssertEqual(try! NaturalMath("720/6÷5⁄4:3").result.get(), 2)
        XCTAssertEqual(try! NaturalMath("(2)[3]{4}").result.get(), 24)
        XCTAssertEqual(try! NaturalMath("3 + 5 - 2").result.get(), 6)
        XCTAssertEqual(try! NaturalMath("10 - 3 + 2").result.get(), 9)
        XCTAssertEqual(try! NaturalMath("3 * 5 / 15").result.get(), 1)
        XCTAssertEqual(try! NaturalMath("12 / 4 * 3").result.get(), 9)
        XCTAssertEqual(try! NaturalMath("2^3").result.get(), 8)
        XCTAssertEqual(try! NaturalMath("4^0.5").result.get(), 2)
        XCTAssertEqual(try! NaturalMath("sqrt(16)").result.get(), 4)
        XCTAssertEqual(try! NaturalMath("sqrt(25) + 5").result.get(), 10)
        XCTAssertEqual(try! NaturalMath("log(100)").result.get(), 2)
        XCTAssertEqual(try! NaturalMath("ln(2.71828182845904523536028747135266249)").result.get(), 1)
        XCTAssertEqual(try! NaturalMath("lb(16)").result.get(), 4)
        XCTAssertEqual(try! NaturalMath("3 + 5 * 2 - 4 / 2").result.get(), 11)
        XCTAssertEqual(try! NaturalMath("(3 + 5) * (2 - 4) / 2").result.get(), -8)
        XCTAssertEqual(try! NaturalMath("2^(3 + 1)").result.get(), 16)
        XCTAssertEqual(try! NaturalMath("sqrt(16 + 9)").result.get(), 5)
        XCTAssertEqual(try! NaturalMath("4(3*9)").result.get(), 108)
        XCTAssertEqual(try! NaturalMath("(3+2)(3+1)").result.get(), 20)
        XCTAssertEqual(try! NaturalMath("-4 + 5").result.get(), 1)
        XCTAssertEqual(try! NaturalMath("-4 * -5").result.get(), 20)
        XCTAssertEqual(try! NaturalMath("2^log(100)").result.get(), 4)
        XCTAssertEqual(try! NaturalMath("log(100) + ln(2.71828182845904523536028747135266249^2) - lb(32)").result.get(), -1)
        XCTAssertEqual(try! NaturalMath("3 + 5 * sqrt(4) - log(10^2)").result.get(), 11)
        XCTAssertEqual(try! NaturalMath("ln(2.71828182845904523536028747135266249^3) / log(10)").result.get(), 3)
        XCTAssertEqual(try! NaturalMath("2^(log(100) / log(10))").result.get(), 4)
        XCTAssertEqual(try! NaturalMath("sqrt(9) * sqrt(16) - sqrt(25)").result.get(), 7)
        XCTAssertEqual(try! NaturalMath("3^3 - 2^2 + 4^2 - 5^2").result.get(), 14)
        XCTAssertEqual(try! NaturalMath("0^0").result.get(), 1)
        XCTAssertEqual(try! NaturalMath("--.1*-2").result.get(), -0.2)
        XCTAssertEqual(try! NaturalMath("abs(4)*a(-4)").result.get(), 16)
        XCTAssertEqual(try! NaturalMath("lne^2").result.get(), 2)
        XCTAssertEqual(try! NaturalMath("LN(e)").result.get(), 1)
        XCTAssertEqual(try! NaturalMath("sin0").result.get(), 0)
        XCTAssertEqual(try! NaturalMath("cos0").result.get(), 1)
        XCTAssertEqual(try! NaturalMath("tan0").result.get(), 0)
        XCTAssertEqual(try! NaturalMath("tan(0.25pi)").result.get(), 1)
        XCTAssertEqual(try! NaturalMath("sin(pi/2)").result.get(), 1)
        XCTAssertEqual(try! NaturalMath("cos(pi/2)").result.get(), 0)
        XCTAssertEqual(try! NaturalMath("asin0").result.get(), 0)
        XCTAssertEqual(try! NaturalMath("acos1").result.get(), 0)
        XCTAssertEqual(try! NaturalMath("atan0").result.get(), 0)
        XCTAssertEqual(try! NaturalMath("arcsin0").result.get(), 0)
        XCTAssertEqual(try! NaturalMath("arccos1").result.get(), 0)
        XCTAssertEqual(try! NaturalMath("arctan0").result.get(), 0)
        XCTAssertEqual(try! NaturalMath("3402823669266920938463463374607431768211455+2093846346337460743176821145").result.get(), Double(3402823669266923032309809712068174945032600))
        XCTAssertNotEqual(try! NaturalMath("3402823669266920938463463374607431768211455+2093846346337460743176821145").result.get(), Double(4402823669266923032309809712068174945032600))
        XCTAssertEqual(try! NaturalMath("3 + 5 - 2").result.get(), 6.0)
        XCTAssertEqual(try! NaturalMath("10 - 3 + 2").result.get(), 9.0)
        XCTAssertEqual(try! NaturalMath("3 * 5 / 15").result.get(), 1.0)
        XCTAssertEqual(try! NaturalMath("12 / 4 * 3").result.get(), 9.0)
        XCTAssertEqual(try! NaturalMath("2^3").result.get(), 8.0)
        XCTAssertEqual(try! NaturalMath("4^0.5").result.get(), 2.0)
        XCTAssertEqual(try! NaturalMath("√(16)").result.get(), 4.0)
        XCTAssertEqual(try! NaturalMath("√(25) + 5").result.get(), 10.0)
        XCTAssertEqual(try! NaturalMath("log(100)").result.get(), 2.0)
        XCTAssertEqual(try! NaturalMath("ln(e)").result.get(), 1.0, accuracy: 0.000001)
        XCTAssertEqual(try! NaturalMath("lb(16)").result.get(), 4.0)
        XCTAssertEqual(try! NaturalMath("3 + 5 * 2 - 4 / 2").result.get(), 11.0)
        XCTAssertEqual(try! NaturalMath("(3 + 5) * (2 - 4) / 2").result.get(), -8.0)
        XCTAssertEqual(try! NaturalMath("2^(3 + 1)").result.get(), 16.0)
        XCTAssertEqual(try! NaturalMath("√(16 + 9)").result.get(), 5.0)
        XCTAssertEqual(try! NaturalMath("4(3*9)").result.get(), 108.0)
        XCTAssertEqual(try! NaturalMath("(3+2)(3+1)").result.get(), 20.0)
        XCTAssertEqual(try! NaturalMath("-4 + 5").result.get(), 1.0)
        XCTAssertEqual(try! NaturalMath("4 - 5").result.get(), -1.0)
        XCTAssertEqual(try! NaturalMath("2^log(100)").result.get(), 4)
        XCTAssertEqual(try! NaturalMath("log(100) + ln(e^2) - lb(32)").result.get(), -1, accuracy: 0.000001)
        XCTAssertEqual(try! NaturalMath("3 + 5 * √(4) - log(10^2)").result.get(), 11)
        XCTAssertEqual(try! NaturalMath("ln(e^3) / log(10)").result.get(), 3, accuracy: 0.000001)
        XCTAssertEqual(try! NaturalMath("2^(log(100) / log(10))").result.get(), 4)
        XCTAssertEqual(try! NaturalMath("√(9) * √(16) - √(25)").result.get(), 7.0)
        XCTAssertEqual(try! NaturalMath("3^3 - 2^2 + 4^2 - 5^2").result.get(), 14)
        XCTAssertEqual(try! NaturalMath("sin(0)").result.get(), 0.0, accuracy: 0.000001)
        XCTAssertEqual(try! NaturalMath("cos(0)").result.get(), 1.0, accuracy: 0.000001)
        XCTAssertEqual(try! NaturalMath("tan(0)").result.get(), 0.0, accuracy: 0.000001)
        XCTAssertEqual(try! NaturalMath("asin(0)").result.get(), 0.0, accuracy: 0.000001)
        XCTAssertEqual(try! NaturalMath("acos(1)").result.get(), 0.0, accuracy: 0.000001)
        XCTAssertEqual(try! NaturalMath("atan(0)").result.get(), 0.0, accuracy: 0.000001)
        XCTAssertEqual(try! NaturalMath("sin(π/2)").result.get(), 1.0, accuracy: 0.000001)
        XCTAssertEqual(try! NaturalMath("cos(π)").result.get(), -1.0, accuracy: 0.000001)
        XCTAssertEqual(try! NaturalMath("tan(π/4)").result.get(), 1.0, accuracy: 0.000001)
        XCTAssertEqual(try! NaturalMath("abs(-5)").result.get(), 5.0)
        XCTAssertEqual(try! NaturalMath("abs(3-8)").result.get(), 5.0)
        XCTAssertEqual(try! NaturalMath("abs(-3 + 5 * 2)").result.get(), 7.0)
        XCTAssertEqual(try! NaturalMath("3 + abs(-5) * 2").result.get(), 13.0)
        XCTAssertEqual(try! NaturalMath("sqrt(abs(-16))").result.get(), 4.0)
        XCTAssertEqual(try! NaturalMath("sqrt(16 + abs(-9))").result.get(), 5.0)
        XCTAssertEqual(try! NaturalMath("log(abs(-100))").result.get(), 2.0)
        XCTAssertEqual(try! NaturalMath("ln(abs(-e^2))").result.get(), 2.0, accuracy: 0.000001)
        XCTAssertEqual(try! NaturalMath("lb(abs(-32))").result.get(), 5.0)
        XCTAssertEqual(try! NaturalMath("sin(log(100))").result.get(), sin(2.0), accuracy: 0.000001)
        XCTAssertEqual(try! NaturalMath("cos(ln(e^2))").result.get(), cos(2.0), accuracy: 0.000001)
        XCTAssertEqual(try! NaturalMath("tan(lb(16))").result.get(), tan(4.0), accuracy: 0.000001)
        XCTAssertEqual(try! NaturalMath("asin(sin(π/2))").result.get(), .pi/2, accuracy: 0.000001)
        XCTAssertEqual(try! NaturalMath("acos(cos(π))").result.get(), .pi, accuracy: 0.000001)
        XCTAssertEqual(try! NaturalMath("atan(tan(π/4))").result.get(), .pi/4, accuracy: 0.000001)
        XCTAssertEqual(try! NaturalMath("abs1sin2cos3tan4").result.get(), -1.04226797403, accuracy: 0.000001)
        XCTAssertEqual(try! NaturalMath("a1s2c3t4").result.get(), -1.04226797403, accuracy: 0.000001)
        XCTAssertEqual(try! NaturalMath("arcsin0.5arccos0.5arctan0.5").result.get(), 0.25422324901, accuracy: 0.000001)
        XCTAssertEqual(try! NaturalMath("asin0.5acos0.5atan0.5").result.get(), 0.25422324901, accuracy: 0.000001)
        XCTAssertEqual(try! NaturalMath("S0.5C0.5T0.5").result.get(), 0.25422324901, accuracy: 0.000001)
        XCTAssertEqual(try! NaturalMath("tan(45π/180)").result.get(), 1, accuracy: 0.000001)
    }
    
    func testUndefined() {
        XCTAssertFalse(try! NaturalMath("2/0").result.get().isFinite)
        XCTAssertFalse(try! NaturalMath("log(0)").result.get().isFinite)
        XCTAssertFalse(try! NaturalMath("sqrt(-1)").result.get().isFinite)
        XCTAssertFalse(try! NaturalMath("arccos(5)").result.get().isFinite)
        XCTAssertFalse(try! NaturalMath("arccos(5)").result.get().isFinite)
    }
    
    func testInvalidInput() {
        XCTAssertNil(try? NaturalMath("+").result.get())
        XCTAssertNil(try? NaturalMath("sqrt").result.get())
        XCTAssertNil(try? NaturalMath("2++3--4").result.get())
        XCTAssertNil(try? NaturalMath("3*/*5").result.get())
        XCTAssertNil(try? NaturalMath("sqrtlog(9").result.get())
        XCTAssertNil(try? NaturalMath("(4+5").result.get())
        XCTAssertNil(try? NaturalMath("3^+2").result.get())
        XCTAssertNil(try? NaturalMath("6 + 2 - * 4").result.get())
        XCTAssertNil(try? NaturalMath("ln(e^)").result.get())
        XCTAssertNil(try? NaturalMath("√(3 + log)").result.get())
        XCTAssertNil(try? NaturalMath("3+log(5*+)").result.get())
        XCTAssertNil(try? NaturalMath("2^log").result.get())
        XCTAssertNil(try? NaturalMath("sin(9").result.get())
    }
}
